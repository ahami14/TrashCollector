@model TrashCollector.Models.Customer

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.firstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.firstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.lastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.lastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.streetAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.streetAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.cityName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.cityName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.stateName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.stateName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.zipCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.zipCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.balanceDue)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.balanceDue)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.startDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.startDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.endDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.endDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.confirmedPickup)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.confirmedPickup)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ApplicationId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ApplicationId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.WeeklyPickup)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.WeeklyPickup)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ExtraDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ExtraDate)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index", "Employees")
</p>

<!DOCTYPE html>
<html>
<head>
    <style>
        #map {
            width: 100%;
            height: 400px;
            background-color: grey;
        }
    </style>
</head>
<body>
    <h3></h3>
    <!--The div element for the map -->
    <div id="map"></div>
    <script>
// Initialize and add the map
function initMap() {
  // The location of Uluru
  var uluru = {lat: -25.344, lng: 131.036};
  // The map, centered at Uluru
  var map = new google.maps.Map(
      document.getElementById('map'), {zoom: 4, center: uluru});
  // The marker, positioned at Uluru
  var marker = new google.maps.Marker({position: uluru, map: map});
}
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC1RfeaRigDnESKpz3L1WB6ga5qk-AQzSk&callback=initMap">
    </script>
</body>
</html>

